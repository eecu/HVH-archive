--local variables for API. Automatically generated by https://github.com/simpleavaster/gslua/blob/master/authors/sapphyrus/generate_api.lua 
local client_latency, client_set_clan_tag, client_draw_indicator, client_log, client_draw_rectangle, client_world_to_screen, client_draw_circle_outline, client_timestamp, client_draw_circle = client.latency, client.set_clan_tag, client.draw_indicator, client.log, client.draw_rectangle, client.world_to_screen, client.draw_circle_outline, client.timestamp, client.draw_circle 
local client_userid_to_entindex, client_trace_line, client_draw_gradient, client_set_event_callback, client_screen_size, client_trace_bullet, client_draw_text = client.userid_to_entindex, client.trace_line, client.draw_gradient, client.set_event_callback, client.screen_size, client.trace_bullet, client.draw_text 
local client_color_log, client_system_time, client_delay_call, client_visible, client_exec, client_eye_position, client_set_cvar = client.color_log, client.system_time, client.delay_call, client.visible, client.exec, client.eye_position, client.set_cvar 
local client_scale_damage, client_draw_hitboxes, client_get_cvar, client_draw_line, client_camera_angles, client_draw_debug_text, client_random_int = client.scale_damage, client.draw_hitboxes, client.get_cvar, client.draw_line, client.camera_angles, client.draw_debug_text, client.random_int 
local entity_get_player_resource, entity_get_local_player, entity_is_enemy, entity_get_bounding_box, entity_is_dormant, entity_get_steam64, entity_get_player_name, entity_hitbox_position, entity_get_game_rules, entity_get_all = entity.get_player_resource, entity.get_local_player, entity.is_enemy, entity.get_bounding_box, entity.is_dormant, entity.get_steam64, entity.get_player_name, entity.hitbox_position, entity.get_game_rules, entity.get_all 
local entity_set_prop, entity_is_alive, entity_get_player_weapon, entity_get_prop, entity_get_players, entity_get_classname = entity.set_prop, entity.is_alive, entity.get_player_weapon, entity.get_prop, entity.get_players, entity.get_classname 
local globals_realtime, globals_absoluteframetime, globals_tickcount, globals_lastoutgoingcommand, globals_curtime, globals_mapname, globals_tickinterval = globals.realtime, globals.absoluteframetime, globals.tickcount, globals.lastoutgoingcommand, globals.curtime, globals.mapname, globals.tickinterval 
local globals_framecount, globals_frametime, globals_maxplayers = globals.framecount, globals.frametime, globals.maxplayers 
local ui_new_slider, ui_new_combobox, ui_reference, ui_is_menu_open, ui_set_visible, ui_new_textbox, ui_new_color_picker, ui_set_callback, ui_set = ui.new_slider, ui.new_combobox, ui.reference, ui.is_menu_open, ui.set_visible, ui.new_textbox, ui.new_color_picker, ui.set_callback, ui.set 
local ui_new_checkbox, ui_new_hotkey, ui_new_button, ui_new_multiselect, ui_get = ui.new_checkbox, ui.new_hotkey, ui.new_button, ui.new_multiselect, ui.get 
local math_ceil, math_tan, math_cos, math_sinh, math_pi, math_max, math_atan2, math_floor, math_sqrt, math_deg, math_atan, math_fmod, math_acos = math.ceil, math.tan, math.cos, math.sinh, math.pi, math.max, math.atan2, math.floor, math.sqrt, math.deg, math.atan, math.fmod, math.acos 
local math_pow, math_abs, math_min, math_sin, math_log, math_exp, math_cosh, math_asin, math_rad = math.pow, math.abs, math.min, math.sin, math.log, math.exp, math.cosh, math.asin, math.rad 
local table_sort, table_remove, table_concat, table_insert = table.sort, table.remove, table.concat, table.insert 
local string_find, string_format, string_gsub, string_len, string_gmatch, string_match, string_reverse, string_upper, string_lower, string_sub = string.find, string.format, string.gsub, string.len, string.gmatch, string.match, string.reverse, string.upper, string.lower, string.sub 
local renderer_circle_outline, renderer_rectangle, renderer_gradient, renderer_circle, renderer_text, renderer_line, renderer_measure_text, renderer_indicator, renderer_world_to_screen = renderer.circle_outline, renderer.rectangle, renderer.gradient, renderer.circle, renderer.text, renderer.line, renderer.measure_text, renderer.indicator, renderer.world_to_screen 
--end of local variables

local chkbox_crosshair_damage_indicator = ui_new_checkbox("VISUALS", "Other ESP", "Crosshair damage indicator")

local s_x, s_y = client_screen_size()
local hitgroup_names = { "Head", "Chest", "Stomach", "Left arm", "Right arm",  "Left leg", "Right leg" }

local bool_canDraw = false

client_set_event_callback("player_hurt", function(e)
	local userid, attacker = e.userid, e.attacker

	local attacker_entindex = client_userid_to_entindex(attacker)
	local victim_entindex = client_userid_to_entindex(userid)

	if attacker_entindex == entity_get_local_player() then
		damage, hitgroup = e.dmg_health, e.hitgroup
		bool_canDraw = true
	end
end)

client_set_event_callback("paint", function(ctx)
	if not ui_get(chkbox_crosshair_damage_indicator) then return end
	if not bool_canDraw then return end
	if hitgroup == nil then return end

	attacked_hitbox = hitgroup_names[hitgroup] or "Body"

	renderer_text(s_x / 2 + 20, s_y / 2 + 45, 255, 255, 255, 255, "b", 0, "Damage: " .. damage)
	renderer_text(s_x / 2 + 20, s_y / 2 + 55, 255, 255, 255, 255, "b", 0, attacked_hitbox)

	if globals_curtime() % 5.5 > 5.4 then bool_canDraw = false end
end)